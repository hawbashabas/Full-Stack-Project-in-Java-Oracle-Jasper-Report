/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package employeemanagementsystem;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;




/**
 *
 * @author hawba
 */
public class LocationForm extends javax.swing.JFrame {

Connection conn=null;

PreparedStatement  ps=null;

ResultSet  rs=null;

    public LocationForm() {       
        initComponents();
        setSize(1080, 600);
        
        
        getLocationData();
        getTotalRows();
       
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtLID = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtCountry = new javax.swing.JTextField();
        btnInsert = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableLocation = new javax.swing.JTable();
        txtSearch = new javax.swing.JTextField();
        btnDisplayALl = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        labelTotalRows = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Location Form");
        setResizable(false);
        setSize(new java.awt.Dimension(1080, 600));
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\hawba\\OneDrive\\Documents\\NetBeansProjects\\EmployeeManagementSystem\\images\\l3.png")); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 51, 255));
        jLabel2.setText("Location");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(392, 392, 392)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addContainerGap(353, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 1070, 150);

        jPanel2.setBackground(new java.awt.Color(255, 255, 204));
        jPanel2.setLayout(null);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("LID:");
        jPanel2.add(jLabel3);
        jLabel3.setBounds(10, 20, 50, 40);

        txtLID.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jPanel2.add(txtLID);
        txtLID.setBounds(90, 20, 230, 40);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("City:");
        jPanel2.add(jLabel4);
        jLabel4.setBounds(10, 90, 50, 40);

        txtCity.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jPanel2.add(txtCity);
        txtCity.setBounds(90, 90, 230, 40);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Country:");
        jPanel2.add(jLabel5);
        jLabel5.setBounds(10, 150, 70, 40);

        txtCountry.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jPanel2.add(txtCountry);
        txtCountry.setBounds(90, 150, 230, 40);

        btnInsert.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnInsert.setText("Insert");
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });
        jPanel2.add(btnInsert);
        btnInsert.setBounds(10, 220, 310, 40);

        btnDelete.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        jPanel2.add(btnDelete);
        btnDelete.setBounds(10, 320, 310, 40);

        btnUpdate.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        jPanel2.add(btnUpdate);
        btnUpdate.setBounds(10, 270, 310, 40);

        getContentPane().add(jPanel2);
        jPanel2.setBounds(0, 160, 340, 430);

        tableLocation.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        tableLocation.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tableLocation.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "LID", "City", "Country"
            }
        ));
        tableLocation.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableLocationMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableLocation);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(350, 210, 720, 290);

        txtSearch.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(txtSearch);
        txtSearch.setBounds(350, 160, 330, 40);

        btnDisplayALl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnDisplayALl.setText("Display All");
        btnDisplayALl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDisplayALlActionPerformed(evt);
            }
        });
        getContentPane().add(btnDisplayALl);
        btnDisplayALl.setBounds(890, 160, 180, 40);

        btnSearch.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        getContentPane().add(btnSearch);
        btnSearch.setBounds(690, 160, 180, 40);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 102, 255));
        jLabel6.setText("Total Rows:");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(360, 510, 150, 30);

        labelTotalRows.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        labelTotalRows.setForeground(new java.awt.Color(255, 51, 51));
        labelTotalRows.setText("0");
        getContentPane().add(labelTotalRows);
        labelTotalRows.setBounds(510, 510, 220, 30);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
void getTotalRows(){
    
    int rows=tableLocation.getRowCount();
    if(rows!=0){
        labelTotalRows.setText(rows+"");
    }
}    
    
    
    
    
    
    
void getLocationData (){
    
   MyConnection obj=new MyConnection();
   conn= obj.connectionDB();  
       
   try{
   String sql="select * from location order by lid";
   
   ps=conn.prepareStatement(sql);
   rs=ps.executeQuery();
   
   tableLocation.setModel(DbUtils.resultSetToTableModel(rs));
   getTotalRows();
   
   rs.close();
   conn.close();
     
   }
   catch(SQLException e){
       System.out.println("error SQL command:"+e);
   }
    
} 
    
    
    
    
    
    
    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
       
     MyConnection obj=new MyConnection();
     conn= obj.connectionDB();
      
     String strLID=txtLID.getText();
     int LID=Integer.parseInt(strLID);
     
      String city=txtCity.getText();
      String country=txtCountry.getText();
      
      try{
          
      String sql="INSERT into location (lid,city,country) values(?,?,?)";
      ps=  conn.prepareStatement(sql);
      ps.setInt(1,LID);
      ps.setString(2, city);
      ps.setString(3, country);
      
      ps.executeUpdate();
      JOptionPane.showMessageDialog(null, "Insert Successfully!");
      
      getLocationData();
      
      
      txtLID.setText("");
      txtCity.setText("");
      txtCountry.setText("");
      conn.close();
      
      }
      catch(SQLException e){
          System.out.println("error SQL command:"+e);
      }
      
      
        
    }//GEN-LAST:event_btnInsertActionPerformed

    private void btnDisplayALlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDisplayALlActionPerformed
        getLocationData();
    }//GEN-LAST:event_btnDisplayALlActionPerformed

    private void tableLocationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableLocationMouseClicked
        
      int rows= tableLocation.getRowCount();
      
      if(rows!=0){
          
        int selected_row=  tableLocation.getSelectedRow();
          
      String LID=  tableLocation.getValueAt( selected_row, 0).toString();
      String city=  tableLocation.getValueAt( selected_row, 1).toString();
      String country=  tableLocation.getValueAt( selected_row, 2).toString();
      
      txtLID.setText(LID);
      txtCity.setText(city);
      txtCountry.setText(country);
         
      }
      
      
        
        
    }//GEN-LAST:event_tableLocationMouseClicked

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
      
        MyConnection obj =new MyConnection();
        conn=obj.connectionDB();
        
        String data=txtSearch.getText();
        
        
        try{
        String sql="Select * from location where lid  LIKE ? ";
        ps=conn.prepareStatement(sql);
        
        ps.setString(1, "%"+data+"%");
        
        rs= ps.executeQuery();
        
        tableLocation.setModel(DbUtils.resultSetToTableModel(rs));
        rs.close();
        conn.close();
        
       }catch(SQLException e){
        System.out.println("error in SQL command:"+e);
      }
        
        
        
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
       
         MyConnection obj=new MyConnection();
         conn= obj.connectionDB();
         
             String strLID=txtLID.getText();
             int LID=Integer.parseInt(strLID);
     
            String city=txtCity.getText();
            String country=txtCountry.getText();
            
            
         try{
             
             String sql="Update   location  set  city=? , country=? where lid=?";
             ps=conn.prepareStatement(sql);
             ps.setString(1, city);
             ps.setString(2, country);
             ps.setInt(3,LID);
             
             ps.executeUpdate();
             JOptionPane.showMessageDialog(null, "update succesfully");
      
            
              
              
             txtLID.setText("");
             txtCity.setText("");
             txtCountry.setText("");
            
             conn.close();    
             
          
             
         }catch(SQLException e){
              System.out.println("error in SQL command:"+e);
         }
        
        
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
       
         MyConnection obj=new MyConnection();
         conn= obj.connectionDB();
         
         
         String strLID=txtLID.getText();
         int LID=Integer.parseInt(strLID);
         
         try{
             
             String sql="delete from location where lid=?";
             ps=conn.prepareStatement(sql);
             ps.setInt(1,LID);
             
             ps.executeUpdate();
             
             JOptionPane.showMessageDialog(null, "delete succesfully");
                    
             txtLID.setText("");
             txtCity.setText("");
             txtCountry.setText("");
            
             conn.close();    
             
          
             
         }catch(SQLException e){
              System.out.println("error in SQL command:"+e);
         }
        
         
         
        
    }//GEN-LAST:event_btnDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
  
    
    
    
    
    
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDisplayALl;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelTotalRows;
    private javax.swing.JTable tableLocation;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtCountry;
    private javax.swing.JTextField txtLID;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
